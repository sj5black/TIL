[스파르타코딩클럽] 18강. 비지도학습 : 차원축소 - t-SNE📘[SCC] 바닥부터 시작하는 머신러닝/📚[스파르타코딩클럽] 바닥부터 시작하는 머신러닝 - 4주차 /📕[스파르타코딩클럽] 18강. 비지도학습 : 차원축소 - t-SNEMade with📕[스파르타코딩클럽] 18강. 비지도학습 : 차원축소 - t-SNE[수업 목표]비지도학습 차원축소 중 t-SNE 에 대한 개념을 배우고, 데이터를 이용해 실습해 봅니다[목차]01. t-SNE 개념02. t-SNE 실습import pandas as pd

# MNIST 데이터셋 불러오기
mnist = fetch_openml('mnist_784', version=1)
# 데이터와 레이블 분리
X = mnist.data
y = mnist.target

# 데이터 프레임의 첫 5행 출력
print(X.head())
print(y.head())
​☑️ 데이터 표준화데이터 표준화 {5px}데이터 표준화 ﻿​PythonCopyfrom sklearn.preprocessing import StandardScaler

# 데이터 표준화
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)
​☑️ t-SNE 수행Scikit-learn의 TSNE를 사용하여 t-SNE를 수행합니다.t-SNE수행 {5px}t-SNE수행 ﻿​PythonCopyfrom sklearn.manifold import TSNE
import matplotlib.pyplot as plt
import seaborn as sns

# t-SNE 모델 생성
tsne = TSNE(n_components=2, random_state=42)
# t-SNE 학습 및 변환
X_tsne = tsne.fit_transform(X_scaled)
# 변환된 데이터의 크기 확인
print(X_tsne.shape)
​☑️ t-SNE 결과 시각화t-SNE 결과를 2차원으로 시각화합니다.t-SNE 결과 시각화 {5px}t-SNE 결과 시각화 ﻿​PythonCopy# 2차원 시각화
plt.figure(figsize=(10, 7))
sns.scatterplot(x=X_tsne[:, 0], y=X_tsne[:, 1], hue=y, palette='viridis', legend=None)
plt.title('t-SNE of MNIST Dataset (2D)')
plt.xlabel('t-SNE Component 1')
plt.ylabel('t-SNE Component 2')
plt.show()
​Copyright ⓒ TeamSparta All rights reserved.t-SNE는 데이터 포인트 간의 유사성을 보존하면서, 고차원 데이터를 2차원 또는 3차원 공간으로 변환합니다