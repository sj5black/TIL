프롬프트 엔지니어링 개념잡기!📕 LLM & RAG를 활용한 AI 서비스 만들기/📘 LLM & RAG를 활용한 AI 서비스 만들기 - 2주차/📕프롬프트 엔지니어링 개념잡기!Made with📕프롬프트 엔지니어링 개념잡기!수업 목표프롬프트 엔지니어링이 무엇인지, 그리고 대형 언어 모델(LLM)에서의 중요성에 대해 알아봅니다.프롬프트 구조와 어조를 조정해 최적의 응답을 유도하는 방법을 학습합니다.LLM의 패턴 인식과 확률 계산 방식이 프롬프트 엔지니어링에 어떻게 적용되는지 알아봅니다.목차이번에 배울것프롬프트 엔지니어링이란?프롬프트 엔지니어링이 동작하는 이유프롬프트 엔지니어링과 System, Assistant, User 역할 적용하기프롬프트 엔지니어링 적용 예시프롬프트 엔지니어링에서 주의할 점정리이번에 배울것❗이번에는 프롬프트 엔지니어링의 개념에 대해 알아볼 예정입니다! 프롬프트 엔지니어링이 무엇인지, 그리고 이를 통해 대형 언어 모델(LLM)에서 최적의 성능을 이끌어내는 방법을 학습합니다. 다양한 사례를 통해 효과적인 프롬프트 구성 방법을 익히고, 실습을 통해 프롬프트의 구조와 어조가 응답에 미치는 영향을 살펴보겠습니다.프롬프트 엔지니어링이란?📚프롬프트 엔지니어링프롬프트 엔지니어링은 인공지능 모델, 특히 대형 언어 모델(LLM)에 적절한 입력(프롬프트)을 설계하고 작성하여, 모델이 최적의 응답을 하도록 유도하는 기술입니다. GPT 모델과 같은 LLM은 입력된 프롬프트에 따라 답변을 생성하므로, 프롬프트가 잘 설계되면 정확하고 유용한 결과를 얻을 수 있고, 반대로 잘못된 프롬프트는 부정확한 답변이나 혼란스러운 결과를 초래할 수 있습니다.⭐프롬프트 엔지니어링의 목표프롬프트 엔지니어링의 주요 목표는 모델이 의도한 대로 응답하도록 유도하는 것입니다.이 과정에서 프롬프트의 구조나 어조를 조정해, 답변의 품질과 일관성을 높이는 것이 중요합니다. 예를 들어, 특정 정보만을 요구하거나, 특정한 방식으로 설명해달라고 할 때는 명확하고 구체적인 프롬프트가 필요합니다.프롬프트 엔지니어링이 동작하는 이유📚프롬프트 엔지니어링 동작하는 이유LLM은 기본적으로 패턴 인식과 확률 계산에 기반하여 학습됩니다. 즉, 학습 데이터 내에서 어떤 단어가 어떤 맥락에서 자주 등장하는지를 학습하고, 주어진 프롬프트에 맞는 답변을 확률적으로 생성합니다.프롬프트 엔지니어링은 이 모델의 패턴 학습 메커니즘을 활용하여 모델이 적절한 경로로 답을 유도하도록 하는 방법입니다.💡LLM의 동작 원리 간단 설명1️⃣프롬프트 입력사용자가 모델에 질문이나 요청을 입력합니다.2️⃣맥락 파악LLM은 입력된 프롬프트를 기반으로 맥락을 분석하고, 그에 맞는 적절한 답변을 생성합니다.3️⃣확률 계산학습된 데이터를 기반으로 각 단어나 문장의 확률 분포를 계산해, 가장 가능성 높은 답변을 선택합니다.프롬프트 엔지니어링은 이러한 과정을 최적화하기 위한 방법으로, 더 나은 답변을 얻기 위해 명확하고 구체적인 입력을 작성하는 것입니다.프롬프트 엔지니어링과 System, Assistant, User 역할 적용하기💡LLM을 사용할 때, 특히 대화형 모델의 구조화된 대화 흐름을 만들기 위해서는 User, Assistant, System의 세 가지 역할을 설정할 수 있습니다. 이 세 가지 역할을 적절히 조정하면 모델이 더 자연스럽고 유의미한 대화를 진행할 수 있습니다.1️⃣User (사용자)User는 모델과 대화하는 주체로, 질문이나 요구사항을 제시하는 역할입니다.프롬프트 엔지니어링에서 User 프롬프트는 명확한 요청을 포함해야 하며, 의도가 분명해야 합니다. User는 모델이 무엇을 해야 하는지 정확하게 전달해야 하므로, 질문 형태의 프롬프트가 많습니다.✔️ 예시"영국의 산업 혁명에 대해 설명해 주세요.""이 텍스트를 요약해 주세요.""다음 문장을 영어로 번역해 주세요."👉 포인트: User는 구체적이고 명확한 요청을 해야 합니다. 이로써 모델이 혼란을 겪지 않고 정확한 답변을 생성할 수 있습니다.2️⃣Assistant (도우미)Assistant는 User의 질문에 답변을 제공하는 역할로, 실제로 GPT 모델이 수행하는 부분입니다.Assistant 프롬프트는 User가 입력한 내용에 따라 적절한 답변을 생성해야 하며, 명확한 어조와 친절한 태도로 응답하는 것이 일반적입니다.✔️ 예시User: "영국의 산업 혁명에 대해 설명해 주세요."Assistant: "영국의 산업 혁명은 18세기 말부터 19세기 초에 걸쳐 일어난 경제적, 기술적 변화로, 기계화와 공장 시스템이 급격히 발전한 시기입니다..."👉 포인트: Assistant는 정확하고 친절하게 응답해야 하며, 명확하고 일관성 있는 답변을 생성할 수 있도록 설정합니다. 이때, 프롬프트 엔지니어링에서 중요한 역할은 질문의 맥락에 맞는 적절한 답변을 제공하는 것입니다.3️⃣System (시스템)System은 대화의 기본 규칙과 Assistant의 성격을 결정합니다. System 역할은 대화의 배경과 규칙을 설정해, 모델이 답변을 생성할 때 어떤 스타일과 어조를 사용할지 지시할 수 있습니다.System 프롬프트는 모델이 특정한 태도나 전문성을 갖고 응답하도록 프레임워크를 제공합니다.✔️ 예시"Assistant는 친절하고 이해하기 쉬운 설명을 제공합니다.""Assistant는 역사학자로서 깊이 있는 정보를 제공합니다.""Assistant는 간결하고 정확한 답변만 제공합니다."👉 포인트: System 프롬프트는 Assistant의 행동을 가이드하는 역할을 합니다. 이 프롬프트는 대화의 일관성을 유지하고, 특정한 목적에 맞게 답변을 최적화할 수 있습니다.프롬프트 엔지니어링 적용 예시1️⃣일반적인 대화 흐름 설정Plain TextCopySystem: "Assistant는 친절하고 명확한 설명을 제공합니다."
User: "산업 혁명이 시작된 배경에 대해 알려주세요."
Assistant: "산업 혁명은 18세기 후반 영국에서 시작되었으며, 기술 혁신과 경제적 변화가 그 주요 배경입니다. 특히 기계화와 공장 시스템의 발전이 큰 역할을 했습니다."​2️⃣전문적이고 깊이 있는 답변을 원할 때Plain TextCopySystem: "Assistant는 역사 전문가로서 깊이 있는 설명을 제공하며, 중요한 역사적 배경도 함께 다룹니다."
User: "영국의 산업 혁명의 주요 원인에 대해 설명해 주세요."
Assistant: "산업 혁명의 주요 원인 중 하나는 영국의 풍부한 천연 자원, 특히 석탄과 철광석의 이용 가능성입니다. 또한, 상업의 발전과 대규모 자본 축적, 정치적 안정성 등이 중요한 역할을 했습니다. 이 외에도 농업 혁명으로 인한 노동력의 증가도 큰 원인이었습니다..."​3️⃣간결한 답변만을 원할 때Plain TextCopySystem: "Assistant는 간결하고 핵심만을 전달하는 답변을 제공합니다."
User: "산업 혁명의 주요 발명품은 무엇인가요?"
Assistant: "산업 혁명의 주요 발명품으로는 방적기, 증기기관, 코튼 진 등이 있습니다."​프롬프트 엔지니어링에서 주의할 점1️⃣명확하고 구체적인 프롬프트 작성모델이 혼란을 겪지 않도록, 프롬프트는 구체적이고 명확하게 작성해야 합니다. 예를 들어, 모호한 질문이나 추상적인 요청은 피하고, 어떤 결과를 기대하는지 명확히 표현하는 것이 중요합니다.2️⃣맥락 유지LLM은 이전의 대화 내용을 기반으로 답변을 생성하므로, 맥락을 유지하는 것이 중요합니다. 이전 대화와의 연결성을 고려하여 일관성 있는 프롬프트를 작성하세요.3️⃣System 설정의 중요성System 프롬프트는 Assistant의 응답 스타일과 태도에 큰 영향을 미칩니다. 올바르게설정된 System 프롬프트는 대화의 질을 높이고, 사용자가 원하는 특정 답변 스타일을 확보할 수 있습니다.정리프롬프트 엔지니어링은 LLM을 더 효율적으로, 그리고 정확하게 사용할 수 있도록 돕는 핵심 기술입니다. User, Assistant, System 역할을 잘 활용하여 더 구조화된 대화를 만들 수 있으며, 특히 System 프롬프트를 통해 Assistant가 어떤 스타일로 답변해야 할지 지침을 줄 수 있습니다. 프롬프트 엔지니어링을 적절히 활용하면 AI 모델의 응답 품질을 크게 향상시킬 수 있습니다! 😊다음 단계에서는 프롬프트 엔지니어링의 세부 기법을 학습하여 더욱 복잡한 작업과 응용을 할 수 있도록 배워보겠습니다. 🌟