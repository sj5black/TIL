LLM의 사용 준비하기📕 LLM & RAG를 활용한 AI 서비스 만들기/📘 LLM & RAG를 활용한 AI 서비스 만들기 - 5주차/📕LLM의 사용 준비하기Made with📕LLM의 사용 준비하기수업 목표이번 주차에서 배울 내용들을 살펴봅니다.보안 문제, API 개념, 그리고 오픈 소스 LLM 구축에 대한 기본 내용을 학습합니다.목차이번에 배울 것보안 문제LLM을 사용할 때의 데이터 보안 문제보안을 강화하는 방법API 개념잡기API란 무엇인가?API의 기본 개념ChatGPT를 API로 사용하는 것의 장점
API 사용의 주요 장점벡터 DB와 LangChain 활용하기벡터 DB란?벡터 DB와 LangChain의 역할LLM + 벡터 DB + LangChain 구축 플로우결론이번에 배울 것❗이번 챕터에서는 LLM을 사용하기 전에 알아야 할 중요한 개념들을 다룰 거예요.LLM을 실무에서 사용하기 위해서는 보안 문제, API 개념, 그리고 오픈 소스 LLM 구축에 대한 이해가 필수입니다.각 개념을 차근차근 살펴보겠습니다! 😊보안 문제💡LLM을 사용할 때는 데이터 보안에 대해 반드시 신경 써야 해요.특히 대화형 AI인 LLM은 사용자의 민감한 정보를 처리할 가능성이 있기 때문에 데이터 유출과 프라이버시 침해가 발생하지 않도록 주의해야 합니다.LLM을 사용할 때의 데이터 보안 문제개인 정보 보호
LLM은 대화를 통해 개인 정보(이름, 전화번호, 신용카드 정보 등)를 접할 수 있어요.
이런 정보가 저장되거나 제3자에게 공유될 경우 큰 문제가 될 수 있습니다.데이터 저장 및 전송
LLM이 처리한 데이터가 어디에 저장되는지, 어떻게 전송되는지를 확인해야 합니다. 
암호화된 전송 방식(예: HTTPS)을 사용해 데이터를 보호해야 해요.모델 학습 데이터
LLM은 학습에 사용된 데이터에 의존해 답변을 생성합니다.
만약 학습 데이터에 민감한 정보가 포함된다면, 해당 정보가 예기치 않게 모델의 출력으로 등장할 가능성도 있습니다.보안을 강화하는 방법1️⃣민감 정보 필터링
입력된 데이터를 처리하기 전에 민감한 정보를 자동으로 걸러내는 필터링 시스템을 구축하세요.2️⃣암호화
데이터는 저장 및 전송 중에 암호화되어야 합니다.
특히 SSL/TLS와 같은 안전한 전송 프로토콜을 사용해야 해요.3️⃣데이터 저장 최소화
필요 이상으로 데이터를 저장하지 말고, 필요한 경우에도 데이터 보존 주기를 설정해 자동 삭제하도록 하세요.4️⃣접근 통제
LLM을 사용할 수 있는 사람의 권한을 제한하고, 모델이 민감한 데이터에 접근하지 않도록 제한해야 해요.API 개념잡기API란 무엇인가?💡API(Application Programming Interface)는 서로 다른 소프트웨어 시스템 간에 데이터와 기능을 주고받을 수 있도록 해주는 인터페이스에요.쉽게 말해, 두 프로그램이 서로 소통할 수 있는 다리라고 보면 됩니다.API의 기본 개념클라이언트-서버 모델
클라이언트(요청하는 쪽)가 서버(응답하는 쪽)에게 데이터를 요청하면, 서버는 해당 데이터를 처리하여 클라이언트에게 반환합니다.HTTP/HTTPS 프로토콜
대부분의 API는 HTTP나 HTTPS를 통해 요청과 응답이 이루어져요.RESTful API
가장 흔히 사용되는 API 설계 방식으로, 각 엔드포인트(URI)와 HTTP 메소드(GET, POST, PUT, DELETE 등)를 사용해 데이터를 주고받아요.ChatGPT를 API로 사용하는 것의 장점💡ChatGPT 같은 LLM을 API로 사용하는 것은 매우 효율적이에요.이 API를 통해 다양한 애플리케이션에 LLM 기능을 쉽게 통합할 수 있습니다.
API 사용의 주요 장점유연성: 필요할 때마다 요청을 보내어 결과를 받을 수 있어, 실시간으로 다양한 애플리케이션에 적용할 수 있어요.확장성: 다양한 서비스나 플랫폼(예: 웹사이트, 앱)에 쉽게 통합할 수 있어, 여러 사용자가 동시에 사용할 수 있는 확장성을 가집니다.업데이트: LLM API 제공사가 모델을 업데이트하면 별다른 수정 없이 최신 기능을 바로 사용할 수 있어요.비용 효율성: API 호출에 따라 비용이 청구되므로, 대규모 서버를 유지할 필요 없이 필요한 만큼만 사용 가능해요.벡터 DB와 LangChain 활용하기❗오픈 소스 LLM을 구축할 때 벡터 DB와 LangChain을 함께 사용하면 더 강력한 시스템을 만들 수 있어요.벡터 DB란?💡벡터 DB는 문서나 데이터의 임베딩(embedding) 벡터를 저장하고, 이 벡터를 바탕으로 유사한 데이터를 빠르게 찾을 수 있는 데이터베이스입니다.LLM과 결합하면 유사 문서 검색이나 추천 시스템 등에 활용할 수 있습니다.벡터 DB와 LangChain의 역할벡터 DB
텍스트 데이터를 벡터로 변환한 후, 유사한 텍스트나 데이터를 빠르게 찾는 데 사용됩니다. 예를 들어, 유사한 질문을 찾거나 추천을 할 때 유용해요.LangChain
LLM과 벡터 DB를 연결해주는 프레임워크로, 데이터 흐름을 관리하고 API 호출을 더 간편하게 만들어줍니다.LLM + 벡터 DB + LangChain 구축 플로우1️⃣텍스트 임베딩 생성
먼저 LLM을 통해 텍스트 데이터를 벡터(임베딩)로 변환합니다.2️⃣벡터 DB 저장
변환된 임베딩을 벡터 DB에 저장합니다.3️⃣질문 처리
사용자가 질문을 하면, 질문도 벡터로 변환하고 벡터 DB에서 유사한 임베딩을 찾습니다.4️⃣답변 생성
찾은 유사한 데이터와 함께 LLM을 통해 최종 답변을 생성합니다.5️⃣API로 제공
이 과정을 LangChain을 통해 API 형태로 제공하여, 실제 서비스에서 사용할 수 있게 합니다.결론이번 챕터에서는 LLM의 사용 준비를 위한 보안 문제, API 개념, 그리고 오픈 소스 LLM 구축 방법을 배웠습니다.데이터를 안전하게 관리하면서 LLM을 효과적으로 활용하고, 필요한 경우에는 오픈 소스 LLM을 구축하여 최적의 시스템을 만들 수 있죠!이제 LLM을 실무에서 사용할 준비가 다 되셨습니다! 😊