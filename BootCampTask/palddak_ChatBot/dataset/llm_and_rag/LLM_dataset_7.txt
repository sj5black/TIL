Shot 계열의 프롬프팅 기법 배워보기📕 LLM & RAG를 활용한 AI 서비스 만들기/📘 LLM & RAG를 활용한 AI 서비스 만들기 - 3주차/📕Shot 계열의 프롬프팅 기법 배워보기Made with📕Shot 계열의 프롬프팅 기법 배워보기수업 목표Zero-Shot, One-Shot, Few-Shot 프롬프팅 기법이 무엇인지 배우고, 각 기법이 AI 모델의 응답에 미치는 영향을 학습합니다.다양한 예제를 통해 Shot 프롬프팅을 실습하고, 모델의 응답이 어떻게 달라지는지 비교해 봅니다.주어진 작업에 따라 Shot 수를 조절하여 최적의 답변을 이끌어내는 방법을 탐구합니다.목차이번에 배울것Zero-Shot 프롬프팅One-Shot 프롬프팅Few-Shot 프롬프팅추가 팁!Few-Shot 프롬프팅 실습하기정리이번에 배울것❗이번 강의에서는 Shot 계열의 프롬프팅 기법을 다뤄보겠습니다.Shot이라는 개념은 사실 매우 간단합니다! 😊 Shot은 그냥 인공지능에게 전달한 예제를 의미해요.예제를 하나 주면: One-Shot예제를 안 주면: Zero-Shot여러 개 주면: Few-Shot 프롬프팅이라고 불러요.보통 Shot을 많이 줄수록 더 원하는 방향으로 답변을 유도할 확률이 높아진답니다. 자, 이제 하나씩 살펴보겠습니다!Zero-Shot 프롬프팅📚Zero-ShotZero-Shot은 아무런 예제를 주지 않고 지침만 전달하는 방식입니다. 인공지능에게 추상적인 요청을 하면, 기대한 답변을 받기 어려운 경우가 많아요. 예를 들어볼게요.Plain TextCopySystem: 너는 전달된 구구단에 대한 농담을 해야해.
User: 6 * 3
Assistant: 왜 6은 3을 곱하면 항상 놀라는 표정을 짓는 걸까요?
왜냐하면 답이 18이라고 귓속말로 말해주니까요!

​👉 결과: 엉뚱한 농담이 나왔죠? 😅 이렇게 Zero-Shot은 구체적인 요구를 이끌어내기가 어렵답니다. 특히 사용자가 원하는 특정한 대답이 있으면, Zero-Shot은 잘 맞지 않을 수 있어요.One-Shot 프롬프팅📚One-Shot이제 샷(Shot)을 하나 추가해서 개선해봅시다. One-Shot 프롬프팅은 예제를 하나 전달해주는 방식입니다.💬먼저 Zero-Shot으로 한 예제부터 볼까요?Plain TextCopySystem: 너는 전달된 구구단에 대한 농담을 해야해.
User: 6 * 3
Assistant: 왜 6은 3을 곱하면 항상 놀라는 표정을 짓는 걸까요?
왜냐하면 답이 18이라고 귓속말로 말해주니까요!

​💬이제 One-Shot 예제를 추가해봅시다. 구구단 농담의 예시 하나를 제공해볼게요.Plain TextCopySystem: 너는 구구단 농담을 하는 인공지능이야. 이건 구구단 농담의 예시야.
"""
6 * 3: 육삼빌딩
"""
User: 2 * 4
Assistant: 2 * 4: 이사오세요

​👉 결과: 구체적인 One-Shot 예제를 주니, 훨씬 더 의도에 맞는 농담이 나왔죠? 😊Few-Shot 프롬프팅💡이제 Few-Shot으로 여러 개의 예시를 줘서, 모델이 더 잘 학습하도록 해볼까요?Plain TextCopySystem: 너는 예를 참고해서 전달된 구구단에 대한 농담을 해야해. 과정은 말하지 말고 농담만 말해.
"""
입력 : 6 * 4
출력: 육사생도
"""
"""
입력: 2 * 8
출력: 이팔 청춘
"""
"""
입력: 5 * 2
출력: 오이팩
"""
User: 2 * 4
Assistant: 이사갈 시간
User: 3 * 8
Assistant: 삼팔광땡
User: 2 * 6
Assistant: 이육사

​👉 결과: 이제 더 다양한 예제를 준 덕분에 정확하게 농담을 생성할 수 있었어요! 😎 Few-Shot 프롬프팅은 많은 예제를 주면 유도하는 능력이 더욱 향상된답니다.추가 팁!💡사실 Few-Shot 프롬프팅을 할 때, 입력과 출력만 제공하는 것보다 과정도 함께 제공하면 더 좋습니다.과정을 설명해주면 모델의 추론 능력이 향상되죠. 예를 들어볼게요.Plain TextCopySystem: 너는 예를 참고해서 전달된 구구단에 대한 농담을 해야해. 과정은 말하지 말고 농담만 말해.
"""
입력 : 6 * 4
출력: 육사생도
과정: 6 * 4는 한국어로 '육곱하기사'야. 여기에서 '곱하기'를 빼면 '육사'가 되지? '육사'로 시작하는 단어를 찾은 거야.
"""
"""
입력: 2 * 8
출력: 이팔 청춘
과정: 2 * 8은 한국어로 '이곱하기팔'이야. 여기서 '곱하기'를 빼면 '이팔'이 되지? 이팔로 시작하는 단어를 찾은 거야.
"""
"""
입력: 5 * 2
출력: 오이팩
과정: 5 * 2는 '오곱하기이'야. 여기서 '곱하기'를 빼면 '오이'가 돼. '오이'로 시작하는 단어를 찾은 거야.
"""
User: 2 * 4
Assistant: 이사오세요

​👉 결과: 과정을 제공하니, 모델이 더 정확한 추론을 할 수 있었습니다. 이런 식으로 과정도 함께 지침으로 주면, 더 정확한 답변을 유도할 수 있습니다!Few-Shot 프롬프팅 실습하기⭐예시 1. 공포의 쿵쿵따쿵쿵따 게임을 할 때도 Few-Shot 프롬프팅을 활용할 수 있어요. 예시 없이 해보면, 잘못된 답변이 나올 수 있죠.Plain TextCopyUser: 나랑 쿵쿵따하자. 라이터 쿵쿵따
Assistant: 토마토

​👉 결과: 엉뚱한 답이 나왔죠? 😅 이제 Few-Shot을 추가해봅시다.Plain TextCopySystem: 너는 공포의 쿵쿵따를 하는 인공지능이야. 예시는 다음과 같아.
"""
입력: 삼겹살
출력: 살구꽃 쿵쿵따
"""
"""
입력: 리어카
출력: 카센터 쿵쿵따
"""
"""
입력: 말미잘
출력: 잘난체 쿵쿵따
"""
User: 라이터 쿵쿵따
Assistant: 터널공사 쿵쿵따~

​👉 결과: Few-Shot 프롬프팅 덕분에 쿵쿵따 게임이 잘 진행되었네요! 😄⭐예시 2. 자음 게임이번에는 자음 게임을 Few-Shot 프롬프팅으로 진행해볼까요?Plain TextCopyUser: 나랑 자음 게임하자. 자음 알려줘.
Assistant: 물론이죠! 시작할 자음은 "ㅁ" 어때요?

​이 게임이 뭔지 모르겠죠? Few-Shot을 추가해서 정확히 게임을 유도해보겠습니다.Plain TextCopySystem: 너는 자음 게임을 하는 인공지능이야. 예시는 다음과 같아.
"""
문제: ㅅㅅㅅㅅ
정답: 식스센스
"""
"""
문제: ㅁㅈㄱㄹㅈㅎㅅ
정답: 말죽거리 잔혹사
"""
"""
문제: ㄱㅁ
정답: 괴물
"""
User: 나랑 자음 게임하자. 자음 알려줘.
Assistant: 문제: ㅎㅅㅂ. 이 자음에 해당하는 한국 영화 제목을 맞춰보세요!
User: 답이 뭐야?
Assistant: 정답: 황산벌

​👉 결과: Few-Shot 프롬프팅으로 정확한 게임 진행이 가능해졌어요!정리Shot 계열의 프롬프팅 기법은 예제를 얼마나 주느냐에 따라 나뉩니다.Zero-Shot: 예제를 주지 않고 지침만 전달.One-Shot: 예제 하나만 주기.Few-Shot: 여러 개의 예제를 주기.예제를 제공할수록 모델이 더 정확하게 응답할 확률이 높아집니다. Shot은 이름은 복잡해 보일지 몰라도, 활용하기는 아주 쉽습니다!다음 장에서는 더 고급스러운 기법들을 살펴볼 예정입니다. 프롬프트 엔지니어링의 세계는 아직 깊고도 넓습니다! 😊