# 공공데이터 분석## 서울시 공공자전거 이용현황http://data.seoul.go.kr/datalist/oa-14994/f/1/datasetview.do## 공공자전거 대여소별 대여내역import osos.getcwd()### 그래프 그리기, 파일처리, 정규식 라이브러리 importimport matplotlib.pyplot as pltfrom matplotlib.cm import scalarmappableimport numpy as npimport re### 한글지원 코드import platformfrom matplotlib import font_manager, rcif platform.system()=='windows':    path = 'c:/windows/fonts/malgun.ttf'    font_name = font_manager.fontproperties(fname=path).get_name()    rc('font', family=font_name)### 1. 텍스트 파일 .csv 읽어보기data_all = np.loadtxt('c:/dev/jhlee_data/대여소별 대여내역(2017년).csv', dtype='u', delimiter=',', encoding='utf-8')### 2. 데이터 차원 확인data_all.shape### 3-1. 상위 5개의 데이터 확인data_all[1:5, :]### 3-2. 데이터 스킴 확인data_all[0, :]### 4. 원 데이터 array에서 분석 data로 가져오기, 상위 5개 데이터 확인- 원 데이터 array인 data_all은 보존할 것rental_loc=[]rental_place=[]rental_date=[]num_of_rental=[0]data = data_all[1:, :]data[:5, :]### 5. 그룹명 가져오기rental_loc = data_all[1:, :1]rental_loc = np.unique(rental_loc)print(rental_loc)len(rental_loc)rental_loc_list = data_all[1:, :1].tolist()num_of_rental_list = data_all[1:, 3:].tolist()num_of_rental = [ [] for x in range(len(rental_loc)) ]### 6. 각 구의 대여소 개수 가져오기for i in range(len(rental_loc)): # 26개의 구    for j in range(len(rental_loc_list)): # 그룹명 전체        if rental_loc[i] == rental_loc_list[j][0]: # 같은 이름이면 대여 건수를 리스트에 추가            num_of_rental[i].append(int(num_of_rental_list[j][0]))            num_of_rental_place = []for i in range(len(rental_loc)):    num_of_rental_place.append(len(num_of_rental[i])) # 각 구에 있는 대여소 개수num_of_rental_place_arr = np.array(num_of_rental_place)num_of_rental_place_arrplt.figure(figsize=(10, 8))x = num_of_rental_placey = rental_locdata_color = [ y / max(x) for y in x]my_cmap = plt.cm.get_cmap('summer_r')colors = my_cmap(data_color)plt.barh(y, x, color=colors)sm = scalarmappable(cmap=my_cmap, norm=plt.normalize(0, max(data_color)))sm.set_array([])cbar = plt.colorbar(sm)cbar.set_label('color', rotation=270, labelpad = 25)for i, v in enumerate(x):    plt.text(v + 3 , i, str(v), color='m', fontweight='bold')    plt.xlim(0, 25000)plt.xlabel("대여소 수")plt.ylabel("지역구")plt.title("서울시 공공자전거 대여소 현황")plt.grid()plt.show()### 7. 서울시 각 구별 연간 대여횟수 가져오기num_of_rental_array = np.array(num_of_rental)sum_of_rental = []for i in range(len(num_of_rental_array)):    sum_of_rental.append(np.array(num_of_rental_array[i]).sum())plt.figure(figsize=(20, 10))x = rental_locy = sum_of_rentaldata_color = [ x / max(y) for x in y]my_cmap = plt.cm.get_cmap('viridis_r')colors = my_cmap(data_color)bar = plt.bar(x, y, color=colors, width=0.6)sm = scalarmappable(cmap=my_cmap, norm=plt.normalize(0, max(data_color)))sm.set_array([])cbar = plt.colorbar(sm)cbar.set_label('color', rotation=270, labelpad = 25)for rect in bar:    height = rect.get_height()    plt.text(rect.get_x() + rect.get_width()/2.0, height, '%d' % int(height), color='m', fontweight='bold', ha='center', va='bottom')    plt.ylim(0, 800000)plt.xlabel("지역구")plt.ylabel("대여건수")plt.xticks(rotation=45)plt.title("서울시 공공자전거 연간 대여건수")plt.grid()plt.show()### 8. 대여소 수 대비 대여건수 비교x = num_of_rental_placey = sum_of_rentalfp1 = np.polyfit(x, y, 1)fp1f1 = np.poly1d(fp1)fx = np.linspace(0, 28000, 100) # x축의 범위는 0부터 28000까지, 샘플 데이터 100개error_range = np.abs(y - f1(x))df_sort = np.sort(error_range)[::-1] # 오차 내림차순 정렬df_sort[:5]plt.figure(figsize=(10,10))plt.scatter(x, y, c=error_range, s=50)plt.plot(fx, f1(fx), ls='dashed', lw=3, color='g')plt.xlim(0, 28000)plt.ylim(0, 800000)plt.legend(['sample', 'rental/rental_place'], loc='upper left')plt.xlabel("대여소 수")plt.ylabel("연간 대여건수")plt.title("서울시 공공자전거 지역별 대여소 수 대비 연간 대여 비율")plt.grid()plt.show()### 9. 마포구 연간 대여 추이mapo_id = 13rental_date = data_all[1:, 2:3]num_of_rental_mapo = [[]] * 12num_of_rental[mapo_id][2]jan = 0feb = 0mar = 0apr = 0may = 0jun = 0jul = 0aug = 0sep = 0oct = 0nov = 0dec = 0k = 0for i in range(len(rental_loc_list)): # 전체 내역에서    tmp = str(rental_date[i].tolist())    tmp_date = re.findall("\d+", tmp) # 정규식 사용하여 월(month) 정보 추출    date = list(map(int, tmp_date))    rental_month = date[0] # i번째 대여 달(month)    rental_location = rental_loc_list[i][0] # i번째 대여 그룹(00구)    if rental_location == '마포구' and rental_month == 1:        jan += num_of_rental[mapo_id][k] # 날짜에 따른 마포구 대여소별 대여 건수를 리스트에 추가         elif rental_location == '마포구' and rental_month == 2:        feb += num_of_rental[mapo_id][k]    elif rental_location == '마포구' and rental_month == 3:        mar += num_of_rental[mapo_id][k]    elif rental_location == '마포구' and rental_month == 4:        apr += num_of_rental[mapo_id][k]    elif rental_location == '마포구' and rental_month == 5:        may += num_of_rental[mapo_id][k]    elif rental_location == '마포구' and rental_month == 6:        jun += num_of_rental[mapo_id][k]    elif rental_location == '마포구' and rental_month == 7:        jul += num_of_rental[mapo_id][k]    elif rental_location == '마포구' and rental_month == 8:        aug += num_of_rental[mapo_id][k]    elif rental_location == '마포구' and rental_month == 9:        sep += num_of_rental[mapo_id][k]    elif rental_location == '마포구' and rental_month == 10:        oct += num_of_rental[mapo_id][k]    elif rental_location == '마포구' and rental_month == 11:        nov += num_of_rental[mapo_id][k]    elif rental_location == '마포구' and rental_month == 12:        dec += num_of_rental[mapo_id][k]    k += 1jan- 월별 마포구 대여건수 합sum_of_rental_mapo = []sum_of_rental_mapo.append(jan)sum_of_rental_mapo.append(feb)sum_of_rental_mapo.append(mar)sum_of_rental_mapo.append(apr)sum_of_rental_mapo.append(may)sum_of_rental_mapo.append(jun)sum_of_rental_mapo.append(jul)sum_of_rental_mapo.append(aug)sum_of_rental_mapo.append(sep)sum_of_rental_mapo.append(oct)sum_of_rental_mapo.append(nov)sum_of_rental_mapo.append(dec)sum_of_rental_mapoplt.figure(figsize=(10,3))mon = ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월']plt.plot(mon, sum_of_rental_mapo, "c*--", markersize = 10, label = "대여건수")plt.legend(loc=4)plt.ylabel("대여 건수")plt.title("월별 마포구 대여 건수")### 10. 마포구 계절별 대여 비율season_of_rental_mapo = []season = ['봄', '여름', '가을', '겨울']spring = mar + apr + maysummer = jun + jul + augautumn = sep + oct + novwinter = dec + jan + febseason_of_rental_mapo.append(spring)season_of_rental_mapo.append(summer)season_of_rental_mapo.append(autumn)season_of_rental_mapo.append(winter)plt.pie(season_of_rental_mapo, labels=season, autopct='%.1f%%')