배열 연산 및 브로드캐스팅📕인공지능을 위한 파이썬 라이브러리/📘인공지능을 위한 파이썬 라이브러리 - 2주차/3️⃣배열 연산 및 브로드캐스팅Made with3️⃣배열 연산 및 브로드캐스팅수업 목표Numpy의 배열 연산 및 브로드캐스팅에 대해서 학습합니다.목차배열 연산 및 브로드캐스팅기본적인 수학 함수와 통계 함수요약배열 연산 및 브로드캐스팅📚NumPy에서는 배열 간의 연산을 매우 효율적으로 수행할 수 있습니다. 특히 브로드캐스팅(Broadcasting) 기능은 크기가 다른 배열 간의 연산을 가능하게 해줍니다.배열 간의 기본 연산NumPy 배열 간의 덧셈, 뺄셈, 곱셈, 나눗셈 모두 요소별(element-wise)로 수행됩니다.PythonCopyimport numpy as np

arr1 = np.array([1, 2, 3])
arr2 = np.array([4, 5, 6])
# 덧셈
add_result = arr1 + arr2
print(add_result)
# 곱셈
mul_result = arr1 * arr2
print(mul_result)

​출력 결과Plain TextCopy[5 7 9]
[ 4 10 18]

​브로드캐스팅(Broadcasting)📚브로드캐스팅이란?작은 배열이 큰 배열의 형태에 맞게 자동으로 확장되어 연산이 이루어지는 것을 의미해요. 
이 기능 덕분에 코드를 더 간결하게 작성할 수 있습니다.서로 다른 크기의 배열 간에도 연산이 가능합니다. 작은 배열이 자동으로 확장되어 연산됩니다.PythonCopyarr1 = np.array([1, 2, 3])
arr2 = np.array([[10], [20], [30]])
# 브로드캐스팅을 이용한 덧셈
broadcast_result = arr1 + arr2
print(broadcast_result)

​출력 결과Plain TextCopy[[11 12 13]
 [21 22 23]
 [31 32 33]]

​기본적인 수학 함수와 통계 함수📚NumPy는 배열을 다룰 때 자주 사용하는 다양한 수학 함수와 통계 함수를 제공합니다.기본적인 수학 함수배열의 합(sum)과 곱(prod)PythonCopyarr = np.array([1, 2, 3, 4])
# 합계
sum_result = np.sum(arr)
print(sum_result)
# 곱
prod_result = np.prod(arr)
print(prod_result)

​출력 결과Plain TextCopy10
24

​제곱근과 로그PythonCopy# 제곱근
sqrt_result = np.sqrt(arr)
print(sqrt_result)
# 자연로그
log_result = np.log(arr)
print(log_result)

​출력 결과Plain TextCopy[1.         1.41421356 1.73205081 2.        ]
[0.         0.69314718 1.09861229 1.38629436]

​기본적인 통계 함수평균(mean), 중간값(median), 표준편차(std)PythonCopyarr = np.array([1, 2, 3, 4, 5])
# 평균
mean_result = np.mean(arr)
print(mean_result)
# 중간값
median_result = np.median(arr)
print(median_result)
# 표준편차
std_result = np.std(arr)
print(std_result)

​출력 결과Plain TextCopy3.0
3.0
1.4142135623730951

​최대값(max)과 최소값(min)PythonCopyarr = np.array([1, 3, 2, 7, 5])
# 최대값
max_result = np.max(arr)
print(max_result)
# 최소값
min_result = np.min(arr)
print(min_result)

​출력 결과Plain TextCopy7
1

​요약📚요약배열 간 연산은 요소별로 수행되며, 크기가 다른 배열 간에도 브로드캐스팅을 통해 연산이 가능합니다.NumPy는 합계, 곱, 제곱근, 로그와 같은 다양한 수학 함수를 제공하며, 이를 통해 복잡한 계산을 간단하게 수행할 수 있어요.평균, 중간값, 표준편차, 최대값, 최소값 등의 통계 함수도 쉽게 사용할 수 있어 데이터 분석에 매우 유용합니다.이제 NumPy의 강력한 연산 능력을 활용해 더 복잡한 데이터 분석을 시도해보세요! 😊