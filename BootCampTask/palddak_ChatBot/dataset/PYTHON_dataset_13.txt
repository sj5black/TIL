데이터 전처리: 데이터 정규화와 표준화 (비선형 변환 포함)📕인공지능을 위한 파이썬 라이브러리/📘인공지능을 위한 파이썬 라이브러리 - 5주차/3️⃣데이터 전처리: 데이터 정규화와 표준화 (비선형 변환 포함)3️⃣데이터 전처리: 데이터 정규화와 표준화 (비선형 변환 포함)수업 목표데이터 전처리 과정에서의 정규화와 표준화 방법에 대해서 알아봅니다.목차1. 데이터 정규화(Normalization) 📏데이터 표준화(Standardization) 3. 비선형 변환(Non-linear Transformation) 🔄요약1. 데이터 정규화(Normalization) 📏📚정규화(Normalization)는 데이터의 범위를 0과 1 사이로 변환하는 과정입니다. 이는 서로 다른 범위를 가진 데이터를 동일한 스케일로 맞추어 비교하기 쉽게 만듭니다.Min-Max 정규화Min-Max 정규화는 가장 일반적인 정규화 방법으로, 각 데이터를 최소값을 0, 최대값을 1로 변환합니다.PythonCopyimport pandas as pd
from sklearn.preprocessing import MinMaxScaler

# 예시 데이터프레임 생성
data = {
'특성1': [10, 20, 30, 40, 50],
'특성2': [1, 2, 3, 4, 5]
}
df = pd.DataFrame(data)
# Min-Max 정규화
scaler = MinMaxScaler()
normalized_df = pd.DataFrame(scaler.fit_transform(df), columns=df.columns)
print(normalized_df)

​결과:Plain TextCopy   특성1  특성2
0   0.0   0.0
1   0.25  0.25
2   0.5   0.5
3   0.75  0.75
4   1.0   1.0

​이 방식으로 각 열의 모든 데이터가 0에서 1 사이의 값으로 변환되었습니다.데이터 표준화(Standardization) 📚표준화(Standardization)는 데이터를 평균이 0, 표준편차가 1이 되도록 변환하는 과정입니다. 이는 정규 분포를 가정한 많은 분석 기법에 유리합니다.Z-점수 표준화Z-점수 표준화는 데이터에서 평균을 빼고 표준편차로 나누어, 모든 데이터가 표준 정규분포(평균 0, 표준편차 1)를 따르도록 만듭니다.PythonCopyfrom sklearn.preprocessing import StandardScaler

# Z-점수 표준화
scaler = StandardScaler()
standardized_df = pd.DataFrame(scaler.fit_transform(df), columns=df.columns)
print(standardized_df)

​결과:Plain TextCopy      특성1      특성2
0 -1.414214 -1.414214
1 -0.707107 -0.707107
2  0.000000  0.000000
3  0.707107  0.707107
4  1.414214  1.414214

​각 열의 데이터가 평균이 0, 표준편차가 1이 되도록 변환되었습니다.3. 비선형 변환(Non-linear Transformation) 🔄📚비선형 변환은 데이터의 비정상적인 분포를 정규 분포에 가깝게 만들기 위해 사용됩니다. 대표적인 방법으로 로그 변환, 제곱근 변환, 박스-콕스 변환 등이 있습니다.로그(Log) 변환로그 변환은 양의 데이터에서 주로 사용되며, 데이터의 분포를 좁히는 데 유용합니다. 특히, 지수 분포를 가진 데이터를 다룰 때 효과적입니다.PythonCopyimport numpy as np

# 로그 변환
df['특성1_log'] = np.log(df['특성1'])
print(df)

​결과:Plain TextCopy   특성1  특성2  특성1_log
0    10     1   2.302585
1    20     2   2.995732
2    30     3   3.401197
3    40     4   3.688879
4    50     5   3.912023

​로그 변환 후 데이터의 분포가 평탄해지는 효과를 얻을 수 있습니다.제곱근(Square Root) 변환제곱근 변환은 데이터의 분포를 평탄하게 만들기 위한 또 다른 방법입니다. 특히, 포아송 분포를 가진 데이터에서 사용됩니다.PythonCopy# 제곱근 변환
df['특성1_sqrt'] = np.sqrt(df['특성1'])
print(df)

​결과:Plain TextCopy   특성1  특성2  특성1_log  특성1_sqrt
0    10     1   2.302585    3.162278
1    20     2   2.995732    4.472136
2    30     3   3.401197    5.477226
3    40     4   3.688879    6.324555
4    50     5   3.912023    7.071068

​제곱근 변환을 통해 분포가 줄어드는 효과를 얻습니다.박스-콕스(Box-Cox) 변환박스-콕스 변환은 다양한 형태의 데이터 분포를 정규분포에 가깝게 변환하기 위해 사용됩니다. 이 방법은 양수 데이터에서만 사용 가능합니다.PythonCopyfrom scipy.stats import boxcox

# 박스-콕스 변환
df['특성1_boxcox'], _ = boxcox(df['특성1'])
print(df)

​결과:Plain TextCopy   특성1  특성2  특성1_log  특성1_sqrt  특성1_boxcox
0    10     1   2.302585    3.162278      2.850350
1    20     2   2.995732    4.472136      3.992679
2    30     3   3.401197    5.477226      4.872105
3    40     4   3.688879    6.324555      5.609646
4    50     5   3.912023    7.071068      6.245548

​박스-콕스 변환을 통해 데이터의 분포가 정규분포에 가까워지는 효과를 얻습니다.요약📚요약정규화(Normalization)는 데이터의 범위를 0과 1 사이로 변환하는 과정으로, 주로 Min-Max 스케일링을 사용합니다.표준화(Standardization)는 데이터를 평균이 0, 표준편차가 1이 되도록 변환하는 과정으로, Z-점수 표준화가 대표적입니다.비선형 변환은 로그, 제곱근, 박스-콕스 변환 등을 통해 비정상적인 데이터 분포를 정규 분포에 가깝게 변환합니다.이제 데이터를 정규화하고 표준화하여 분석에 적합한 상태로 만들어 보세요! 😊